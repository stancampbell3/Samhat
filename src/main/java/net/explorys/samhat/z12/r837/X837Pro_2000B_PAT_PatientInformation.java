/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package net.explorys.samhat.z12.r837;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class X837Pro_2000B_PAT_PatientInformation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"X837Pro_2000B_PAT_PatientInformation\",\"namespace\":\"net.explorys.samhat.z12.r837\",\"fields\":[{\"name\":\"_2000BPAT05DateTimePeriodFormatQualifier\",\"type\":\"string\"},{\"name\":\"_2000BPAT06InsuredIndividualDeathDate\",\"type\":\"string\"},{\"name\":\"_2000BPAT07UnitOrBasisForMeasurementCode\",\"type\":\"string\"},{\"name\":\"_2000BPAT08PatientWeight\",\"type\":\"string\"},{\"name\":\"_2000BPAT09PregnancyIndicator\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence _2000BPAT05DateTimePeriodFormatQualifier;
  @Deprecated public java.lang.CharSequence _2000BPAT06InsuredIndividualDeathDate;
  @Deprecated public java.lang.CharSequence _2000BPAT07UnitOrBasisForMeasurementCode;
  @Deprecated public java.lang.CharSequence _2000BPAT08PatientWeight;
  @Deprecated public java.lang.CharSequence _2000BPAT09PregnancyIndicator;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public X837Pro_2000B_PAT_PatientInformation() {}

  /**
   * All-args constructor.
   */
  public X837Pro_2000B_PAT_PatientInformation(java.lang.CharSequence _2000BPAT05DateTimePeriodFormatQualifier, java.lang.CharSequence _2000BPAT06InsuredIndividualDeathDate, java.lang.CharSequence _2000BPAT07UnitOrBasisForMeasurementCode, java.lang.CharSequence _2000BPAT08PatientWeight, java.lang.CharSequence _2000BPAT09PregnancyIndicator) {
    this._2000BPAT05DateTimePeriodFormatQualifier = _2000BPAT05DateTimePeriodFormatQualifier;
    this._2000BPAT06InsuredIndividualDeathDate = _2000BPAT06InsuredIndividualDeathDate;
    this._2000BPAT07UnitOrBasisForMeasurementCode = _2000BPAT07UnitOrBasisForMeasurementCode;
    this._2000BPAT08PatientWeight = _2000BPAT08PatientWeight;
    this._2000BPAT09PregnancyIndicator = _2000BPAT09PregnancyIndicator;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return _2000BPAT05DateTimePeriodFormatQualifier;
    case 1: return _2000BPAT06InsuredIndividualDeathDate;
    case 2: return _2000BPAT07UnitOrBasisForMeasurementCode;
    case 3: return _2000BPAT08PatientWeight;
    case 4: return _2000BPAT09PregnancyIndicator;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: _2000BPAT05DateTimePeriodFormatQualifier = (java.lang.CharSequence)value$; break;
    case 1: _2000BPAT06InsuredIndividualDeathDate = (java.lang.CharSequence)value$; break;
    case 2: _2000BPAT07UnitOrBasisForMeasurementCode = (java.lang.CharSequence)value$; break;
    case 3: _2000BPAT08PatientWeight = (java.lang.CharSequence)value$; break;
    case 4: _2000BPAT09PregnancyIndicator = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the '_2000BPAT05DateTimePeriodFormatQualifier' field.
   */
  public java.lang.CharSequence get2000BPAT05DateTimePeriodFormatQualifier$1() {
    return _2000BPAT05DateTimePeriodFormatQualifier;
  }

  /**
   * Sets the value of the '_2000BPAT05DateTimePeriodFormatQualifier' field.
   * @param value the value to set.
   */
  public void set2000BPAT05DateTimePeriodFormatQualifier$1(java.lang.CharSequence value) {
    this._2000BPAT05DateTimePeriodFormatQualifier = value;
  }

  /**
   * Gets the value of the '_2000BPAT06InsuredIndividualDeathDate' field.
   */
  public java.lang.CharSequence get2000BPAT06InsuredIndividualDeathDate$1() {
    return _2000BPAT06InsuredIndividualDeathDate;
  }

  /**
   * Sets the value of the '_2000BPAT06InsuredIndividualDeathDate' field.
   * @param value the value to set.
   */
  public void set2000BPAT06InsuredIndividualDeathDate$1(java.lang.CharSequence value) {
    this._2000BPAT06InsuredIndividualDeathDate = value;
  }

  /**
   * Gets the value of the '_2000BPAT07UnitOrBasisForMeasurementCode' field.
   */
  public java.lang.CharSequence get2000BPAT07UnitOrBasisForMeasurementCode$1() {
    return _2000BPAT07UnitOrBasisForMeasurementCode;
  }

  /**
   * Sets the value of the '_2000BPAT07UnitOrBasisForMeasurementCode' field.
   * @param value the value to set.
   */
  public void set2000BPAT07UnitOrBasisForMeasurementCode$1(java.lang.CharSequence value) {
    this._2000BPAT07UnitOrBasisForMeasurementCode = value;
  }

  /**
   * Gets the value of the '_2000BPAT08PatientWeight' field.
   */
  public java.lang.CharSequence get2000BPAT08PatientWeight$1() {
    return _2000BPAT08PatientWeight;
  }

  /**
   * Sets the value of the '_2000BPAT08PatientWeight' field.
   * @param value the value to set.
   */
  public void set2000BPAT08PatientWeight$1(java.lang.CharSequence value) {
    this._2000BPAT08PatientWeight = value;
  }

  /**
   * Gets the value of the '_2000BPAT09PregnancyIndicator' field.
   */
  public java.lang.CharSequence get2000BPAT09PregnancyIndicator$1() {
    return _2000BPAT09PregnancyIndicator;
  }

  /**
   * Sets the value of the '_2000BPAT09PregnancyIndicator' field.
   * @param value the value to set.
   */
  public void set2000BPAT09PregnancyIndicator$1(java.lang.CharSequence value) {
    this._2000BPAT09PregnancyIndicator = value;
  }

  /** Creates a new X837Pro_2000B_PAT_PatientInformation RecordBuilder */
  public static net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder newBuilder() {
    return new net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder();
  }
  
  /** Creates a new X837Pro_2000B_PAT_PatientInformation RecordBuilder by copying an existing Builder */
  public static net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder newBuilder(net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder other) {
    return new net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder(other);
  }
  
  /** Creates a new X837Pro_2000B_PAT_PatientInformation RecordBuilder by copying an existing X837Pro_2000B_PAT_PatientInformation instance */
  public static net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder newBuilder(net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation other) {
    return new net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder(other);
  }
  
  /**
   * RecordBuilder for X837Pro_2000B_PAT_PatientInformation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<X837Pro_2000B_PAT_PatientInformation>
    implements org.apache.avro.data.RecordBuilder<X837Pro_2000B_PAT_PatientInformation> {

    private java.lang.CharSequence _2000BPAT05DateTimePeriodFormatQualifier;
    private java.lang.CharSequence _2000BPAT06InsuredIndividualDeathDate;
    private java.lang.CharSequence _2000BPAT07UnitOrBasisForMeasurementCode;
    private java.lang.CharSequence _2000BPAT08PatientWeight;
    private java.lang.CharSequence _2000BPAT09PregnancyIndicator;

    /** Creates a new Builder */
    private Builder() {
      super(net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other._2000BPAT05DateTimePeriodFormatQualifier)) {
        this._2000BPAT05DateTimePeriodFormatQualifier = data().deepCopy(fields()[0].schema(), other._2000BPAT05DateTimePeriodFormatQualifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other._2000BPAT06InsuredIndividualDeathDate)) {
        this._2000BPAT06InsuredIndividualDeathDate = data().deepCopy(fields()[1].schema(), other._2000BPAT06InsuredIndividualDeathDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other._2000BPAT07UnitOrBasisForMeasurementCode)) {
        this._2000BPAT07UnitOrBasisForMeasurementCode = data().deepCopy(fields()[2].schema(), other._2000BPAT07UnitOrBasisForMeasurementCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other._2000BPAT08PatientWeight)) {
        this._2000BPAT08PatientWeight = data().deepCopy(fields()[3].schema(), other._2000BPAT08PatientWeight);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other._2000BPAT09PregnancyIndicator)) {
        this._2000BPAT09PregnancyIndicator = data().deepCopy(fields()[4].schema(), other._2000BPAT09PregnancyIndicator);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing X837Pro_2000B_PAT_PatientInformation instance */
    private Builder(net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation other) {
            super(net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.SCHEMA$);
      if (isValidValue(fields()[0], other._2000BPAT05DateTimePeriodFormatQualifier)) {
        this._2000BPAT05DateTimePeriodFormatQualifier = data().deepCopy(fields()[0].schema(), other._2000BPAT05DateTimePeriodFormatQualifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other._2000BPAT06InsuredIndividualDeathDate)) {
        this._2000BPAT06InsuredIndividualDeathDate = data().deepCopy(fields()[1].schema(), other._2000BPAT06InsuredIndividualDeathDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other._2000BPAT07UnitOrBasisForMeasurementCode)) {
        this._2000BPAT07UnitOrBasisForMeasurementCode = data().deepCopy(fields()[2].schema(), other._2000BPAT07UnitOrBasisForMeasurementCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other._2000BPAT08PatientWeight)) {
        this._2000BPAT08PatientWeight = data().deepCopy(fields()[3].schema(), other._2000BPAT08PatientWeight);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other._2000BPAT09PregnancyIndicator)) {
        this._2000BPAT09PregnancyIndicator = data().deepCopy(fields()[4].schema(), other._2000BPAT09PregnancyIndicator);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the '_2000BPAT05DateTimePeriodFormatQualifier' field */
    public java.lang.CharSequence get2000BPAT05DateTimePeriodFormatQualifier$1() {
      return _2000BPAT05DateTimePeriodFormatQualifier;
    }
    
    /** Sets the value of the '_2000BPAT05DateTimePeriodFormatQualifier' field */
    public net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder set2000BPAT05DateTimePeriodFormatQualifier$1(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this._2000BPAT05DateTimePeriodFormatQualifier = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the '_2000BPAT05DateTimePeriodFormatQualifier' field has been set */
    public boolean has2000BPAT05DateTimePeriodFormatQualifier$1() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the '_2000BPAT05DateTimePeriodFormatQualifier' field */
    public net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder clear2000BPAT05DateTimePeriodFormatQualifier$1() {
      _2000BPAT05DateTimePeriodFormatQualifier = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the '_2000BPAT06InsuredIndividualDeathDate' field */
    public java.lang.CharSequence get2000BPAT06InsuredIndividualDeathDate$1() {
      return _2000BPAT06InsuredIndividualDeathDate;
    }
    
    /** Sets the value of the '_2000BPAT06InsuredIndividualDeathDate' field */
    public net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder set2000BPAT06InsuredIndividualDeathDate$1(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this._2000BPAT06InsuredIndividualDeathDate = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the '_2000BPAT06InsuredIndividualDeathDate' field has been set */
    public boolean has2000BPAT06InsuredIndividualDeathDate$1() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the '_2000BPAT06InsuredIndividualDeathDate' field */
    public net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder clear2000BPAT06InsuredIndividualDeathDate$1() {
      _2000BPAT06InsuredIndividualDeathDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the '_2000BPAT07UnitOrBasisForMeasurementCode' field */
    public java.lang.CharSequence get2000BPAT07UnitOrBasisForMeasurementCode$1() {
      return _2000BPAT07UnitOrBasisForMeasurementCode;
    }
    
    /** Sets the value of the '_2000BPAT07UnitOrBasisForMeasurementCode' field */
    public net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder set2000BPAT07UnitOrBasisForMeasurementCode$1(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this._2000BPAT07UnitOrBasisForMeasurementCode = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the '_2000BPAT07UnitOrBasisForMeasurementCode' field has been set */
    public boolean has2000BPAT07UnitOrBasisForMeasurementCode$1() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the '_2000BPAT07UnitOrBasisForMeasurementCode' field */
    public net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder clear2000BPAT07UnitOrBasisForMeasurementCode$1() {
      _2000BPAT07UnitOrBasisForMeasurementCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the '_2000BPAT08PatientWeight' field */
    public java.lang.CharSequence get2000BPAT08PatientWeight$1() {
      return _2000BPAT08PatientWeight;
    }
    
    /** Sets the value of the '_2000BPAT08PatientWeight' field */
    public net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder set2000BPAT08PatientWeight$1(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this._2000BPAT08PatientWeight = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the '_2000BPAT08PatientWeight' field has been set */
    public boolean has2000BPAT08PatientWeight$1() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the '_2000BPAT08PatientWeight' field */
    public net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder clear2000BPAT08PatientWeight$1() {
      _2000BPAT08PatientWeight = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the '_2000BPAT09PregnancyIndicator' field */
    public java.lang.CharSequence get2000BPAT09PregnancyIndicator$1() {
      return _2000BPAT09PregnancyIndicator;
    }
    
    /** Sets the value of the '_2000BPAT09PregnancyIndicator' field */
    public net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder set2000BPAT09PregnancyIndicator$1(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this._2000BPAT09PregnancyIndicator = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the '_2000BPAT09PregnancyIndicator' field has been set */
    public boolean has2000BPAT09PregnancyIndicator$1() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the '_2000BPAT09PregnancyIndicator' field */
    public net.explorys.samhat.z12.r837.X837Pro_2000B_PAT_PatientInformation.Builder clear2000BPAT09PregnancyIndicator$1() {
      _2000BPAT09PregnancyIndicator = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public X837Pro_2000B_PAT_PatientInformation build() {
      try {
        X837Pro_2000B_PAT_PatientInformation record = new X837Pro_2000B_PAT_PatientInformation();
        record._2000BPAT05DateTimePeriodFormatQualifier = fieldSetFlags()[0] ? this._2000BPAT05DateTimePeriodFormatQualifier : (java.lang.CharSequence) defaultValue(fields()[0]);
        record._2000BPAT06InsuredIndividualDeathDate = fieldSetFlags()[1] ? this._2000BPAT06InsuredIndividualDeathDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        record._2000BPAT07UnitOrBasisForMeasurementCode = fieldSetFlags()[2] ? this._2000BPAT07UnitOrBasisForMeasurementCode : (java.lang.CharSequence) defaultValue(fields()[2]);
        record._2000BPAT08PatientWeight = fieldSetFlags()[3] ? this._2000BPAT08PatientWeight : (java.lang.CharSequence) defaultValue(fields()[3]);
        record._2000BPAT09PregnancyIndicator = fieldSetFlags()[4] ? this._2000BPAT09PregnancyIndicator : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
